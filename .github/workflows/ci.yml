name: CI/CD Pipeline

on:
  workflow_dispatch:
  push:
    branches: 
      - main
      - develop
    paths:
      - 'app/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: 
      - main
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        working-directory: app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff black pytest pytest-md httpx
          
      - name: Run ruff linter
        working-directory: app
        run: ruff check .
        
      - name: Check code formatting
        working-directory: app
        run: black --check .
        
      # - name: Run tests
      #   working-directory: app
      #   run: pytest tests/ -v

      - name: Run tests with pytest action
        uses: pavelzw/pytest-action@v2
        with:
          emoji: false
          verbose: false
          job-summary: true
          report-title: 'PyTest Report'
          custom-pytest: 'pytest app/tests/ -v'


  build-and-scan:
    name: Build and Security Scan
    runs-on: ubuntu-latest
    needs: lint-and-test
    outputs:
      digest: ${{ steps.digest.outputs.digest }}
    if: github.event_name != 'pull_request'
    
    permissions:
      contents: write
      packages: write
      security-events: write
      actions: read
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      # https://github.com/docker/metadata-action
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      # Build for scanning, first
      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: app
          push: false
          load: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            APP_NAME=simple-web
            BUILD_SHA=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      # Trivy security scans
      # https://github.com/aquasecurity/trivy-action?tab=readme-ov-file
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.33.1
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          # format: 'sarif'
          # output: 'trivy-results.sarif'
          format: 'table' # Output in table to console
          severity: 'CRITICAL,HIGH'
          exit-code: '0' # TODO: Change to '1' once issues are resolved
          scan-type: 'image'
          scanners: 'vuln'

      # Requires Code Scanning
      # Upload Trivy results to GitHub Security tab
      # - name: Upload Trivy results
      #   uses: github/codeql-action/upload-sarif@v3
      #   with:
      #     sarif_file: 'trivy-results.sarif'
      
      # Push the image to GHCR
      - name: Push Docker image
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          context: app
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          build-args: |
            APP_NAME=simple-web
            BUILD_SHA=${{ github.sha }}
            BUILD_VERSION=${{ github.ref_name }}
          cache-from: type=gha
      
      # Pop the image digest for use in manifest updates
      - name: Get image digest
        id: digest
        run: |
          DIGEST=${{ github.sha }}
          echo "digest=$DIGEST" >> $GITHUB_OUTPUT
          echo "Image digest: $DIGEST"

  update-gitops:
    name: Update GitOps Manifests
    runs-on: ubuntu-latest
    needs: build-and-scan
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # with:
        #   token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Update image in manifests
        run: |
          IMAGE_WITH_DIGEST="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.build-and-scan.outputs.digest }}"
          
          # Update deployment manifest
          sed -i "s|image:.*|image: ${IMAGE_WITH_DIGEST}|g" gitops/apps/kop-app.yml
          
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add gitops/apps/kop-app.yml
          git commit -m "deployment: update image to ${{ github.sha }}" || exit 0
          git push
